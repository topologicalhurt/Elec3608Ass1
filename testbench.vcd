$version Generated by VerilatedVcd $end
$date Mon Oct 20 23:15:01 2025
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 W! clock $end
  $var wire  1 X! reset $end
  $scope module testbench $end
   $var wire 32 Y! MEM_ADDR_WIDTH [31:0] $end
   $var wire 32 Z! NUMCORES [31:0] $end
   $var wire 32 [! c [31:0] $end
   $var wire  1 W! clock $end
   $var wire 32 7 cycles [31:0] $end
   $var wire 32 ) dmem_addr0 [31:0] $end
   $var wire 32 1 dmem_addr1 [31:0] $end
   $var wire  2 6 dmem_cond [1:0] $end
   $var wire 32 , dmem_rdata0 [31:0] $end
   $var wire 32 4 dmem_rdata1 [31:0] $end
   $var wire  2 5 dmem_resv [1:0] $end
   $var wire  1 ' dmem_valid0 $end
   $var wire  1 / dmem_valid1 $end
   $var wire 32 + dmem_wdata0 [31:0] $end
   $var wire 32 3 dmem_wdata1 [31:0] $end
   $var wire  1 ( dmem_wr_is_cond0 $end
   $var wire  1 0 dmem_wr_is_cond1 $end
   $var wire  4 * dmem_wstrb0 [3:0] $end
   $var wire  4 2 dmem_wstrb1 [3:0] $end
   $var wire 32 % imem_addr0 [31:0] $end
   $var wire 32 - imem_addr1 [31:0] $end
   $var wire 32 & imem_data0 [31:0] $end
   $var wire 32 . imem_data1 [31:0] $end
   $var wire 32 8 r [31:0] $end
   $var wire  1 X! reset $end
   $var wire  1 # trap0 $end
   $var wire  1 $ trap1 $end
   $scope module dut_0 $end
    $var wire  5 i! AMO_LR [4:0] $end
    $var wire  5 j! AMO_SC [4:0] $end
    $var wire 32 ]! NUMREGS [31:0] $end
    $var wire  7 g! OPCODE_AMO [6:0] $end
    $var wire  7 a! OPCODE_AUIPC [6:0] $end
    $var wire  7 d! OPCODE_BRANCH [6:0] $end
    $var wire  7 b! OPCODE_JAL [6:0] $end
    $var wire  7 c! OPCODE_JALR [6:0] $end
    $var wire  7 e! OPCODE_LOAD [6:0] $end
    $var wire  7 `! OPCODE_LUI [6:0] $end
    $var wire  7 _! OPCODE_OP [6:0] $end
    $var wire  7 ^! OPCODE_OP_IMM [6:0] $end
    $var wire  7 f! OPCODE_STORE [6:0] $end
    $var wire  7 h! OPCODE_SYSTEM [6:0] $end
    $var wire 32 \! RESET_ADDR [31:0] $end
    $var wire  1 e aq $end
    $var wire  1 W! clock $end
    $var wire 32 ) dmem_addr [31:0] $end
    $var wire  1 : dmem_cond $end
    $var wire 32 , dmem_rdata [31:0] $end
    $var wire  1 9 dmem_resv $end
    $var wire  1 ' dmem_valid $end
    $var wire 32 + dmem_wdata [31:0] $end
    $var wire  1 ( dmem_wr_is_cond $end
    $var wire  4 * dmem_wstrb [3:0] $end
    $var wire  1 g illegalinsn $end
    $var wire 32 % imem_addr [31:0] $end
    $var wire 32 & imem_data [31:0] $end
    $var wire 12 c imm_i [11:0] $end
    $var wire 32 d imm_i_sext [31:0] $end
    $var wire 32 & insn [31:0] $end
    $var wire  3 ^ insn_funct3 [2:0] $end
    $var wire  7 [ insn_funct7 [6:0] $end
    $var wire  7 ` insn_opcode [6:0] $end
    $var wire  5 _ insn_rd [4:0] $end
    $var wire  5 ] insn_rs1 [4:0] $end
    $var wire  5 \ insn_rs2 [4:0] $end
    $var wire 32 ) mem_addr [31:0] $end
    $var wire  1 p mem_is_load $end
    $var wire  1 n mem_is_lr $end
    $var wire  1 o mem_is_sc $end
    $var wire  3 q mem_load_funct3 [2:0] $end
    $var wire  5 m mem_rd [4:0] $end
    $var wire  1 9 mem_resv $end
    $var wire  1 ' mem_valid $end
    $var wire  1 l mem_wait $end
    $var wire  8 k mem_wait_cycles [7:0] $end
    $var wire 32 + mem_wdata [31:0] $end
    $var wire  1 ( mem_wr_is_cond $end
    $var wire  4 * mem_wstrb [3:0] $end
    $var wire 32 i npc [31:0] $end
    $var wire 32 % pc [31:0] $end
    $var wire 32 ; regfile(0) [31:0] $end
    $var wire 32 < regfile(1) [31:0] $end
    $var wire 32 E regfile(10) [31:0] $end
    $var wire 32 F regfile(11) [31:0] $end
    $var wire 32 G regfile(12) [31:0] $end
    $var wire 32 H regfile(13) [31:0] $end
    $var wire 32 I regfile(14) [31:0] $end
    $var wire 32 J regfile(15) [31:0] $end
    $var wire 32 K regfile(16) [31:0] $end
    $var wire 32 L regfile(17) [31:0] $end
    $var wire 32 M regfile(18) [31:0] $end
    $var wire 32 N regfile(19) [31:0] $end
    $var wire 32 = regfile(2) [31:0] $end
    $var wire 32 O regfile(20) [31:0] $end
    $var wire 32 P regfile(21) [31:0] $end
    $var wire 32 Q regfile(22) [31:0] $end
    $var wire 32 R regfile(23) [31:0] $end
    $var wire 32 S regfile(24) [31:0] $end
    $var wire 32 T regfile(25) [31:0] $end
    $var wire 32 U regfile(26) [31:0] $end
    $var wire 32 V regfile(27) [31:0] $end
    $var wire 32 W regfile(28) [31:0] $end
    $var wire 32 X regfile(29) [31:0] $end
    $var wire 32 > regfile(3) [31:0] $end
    $var wire 32 Y regfile(30) [31:0] $end
    $var wire 32 Z regfile(31) [31:0] $end
    $var wire 32 ? regfile(4) [31:0] $end
    $var wire 32 @ regfile(5) [31:0] $end
    $var wire 32 A regfile(6) [31:0] $end
    $var wire 32 B regfile(7) [31:0] $end
    $var wire 32 C regfile(8) [31:0] $end
    $var wire 32 D regfile(9) [31:0] $end
    $var wire 32 j regfiledata [31:0] $end
    $var wire  1 h regwrite $end
    $var wire  1 X! reset $end
    $var wire  1 f rl $end
    $var wire 32 a rs1_value [31:0] $end
    $var wire 32 b rs2_value [31:0] $end
    $var wire  1 # trap $end
    $scope module unnamedblk1 $end
     $var wire 32 r i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module dut_1 $end
    $var wire  5 i! AMO_LR [4:0] $end
    $var wire  5 j! AMO_SC [4:0] $end
    $var wire 32 ]! NUMREGS [31:0] $end
    $var wire  7 g! OPCODE_AMO [6:0] $end
    $var wire  7 a! OPCODE_AUIPC [6:0] $end
    $var wire  7 d! OPCODE_BRANCH [6:0] $end
    $var wire  7 b! OPCODE_JAL [6:0] $end
    $var wire  7 c! OPCODE_JALR [6:0] $end
    $var wire  7 e! OPCODE_LOAD [6:0] $end
    $var wire  7 `! OPCODE_LUI [6:0] $end
    $var wire  7 _! OPCODE_OP [6:0] $end
    $var wire  7 ^! OPCODE_OP_IMM [6:0] $end
    $var wire  7 f! OPCODE_STORE [6:0] $end
    $var wire  7 h! OPCODE_SYSTEM [6:0] $end
    $var wire 32 k! RESET_ADDR [31:0] $end
    $var wire  1 A! aq $end
    $var wire  1 W! clock $end
    $var wire 32 1 dmem_addr [31:0] $end
    $var wire  1 t dmem_cond $end
    $var wire 32 4 dmem_rdata [31:0] $end
    $var wire  1 s dmem_resv $end
    $var wire  1 / dmem_valid $end
    $var wire 32 3 dmem_wdata [31:0] $end
    $var wire  1 0 dmem_wr_is_cond $end
    $var wire  4 2 dmem_wstrb [3:0] $end
    $var wire  1 C! illegalinsn $end
    $var wire 32 - imem_addr [31:0] $end
    $var wire 32 . imem_data [31:0] $end
    $var wire 12 ?! imm_i [11:0] $end
    $var wire 32 @! imm_i_sext [31:0] $end
    $var wire 32 . insn [31:0] $end
    $var wire  3 :! insn_funct3 [2:0] $end
    $var wire  7 7! insn_funct7 [6:0] $end
    $var wire  7 <! insn_opcode [6:0] $end
    $var wire  5 ;! insn_rd [4:0] $end
    $var wire  5 9! insn_rs1 [4:0] $end
    $var wire  5 8! insn_rs2 [4:0] $end
    $var wire 32 1 mem_addr [31:0] $end
    $var wire  1 L! mem_is_load $end
    $var wire  1 J! mem_is_lr $end
    $var wire  1 K! mem_is_sc $end
    $var wire  3 M! mem_load_funct3 [2:0] $end
    $var wire  5 I! mem_rd [4:0] $end
    $var wire  1 s mem_resv $end
    $var wire  1 / mem_valid $end
    $var wire  1 H! mem_wait $end
    $var wire  8 G! mem_wait_cycles [7:0] $end
    $var wire 32 3 mem_wdata [31:0] $end
    $var wire  1 0 mem_wr_is_cond $end
    $var wire  4 2 mem_wstrb [3:0] $end
    $var wire 32 E! npc [31:0] $end
    $var wire 32 - pc [31:0] $end
    $var wire 32 u regfile(0) [31:0] $end
    $var wire 32 v regfile(1) [31:0] $end
    $var wire 32 !! regfile(10) [31:0] $end
    $var wire 32 "! regfile(11) [31:0] $end
    $var wire 32 #! regfile(12) [31:0] $end
    $var wire 32 $! regfile(13) [31:0] $end
    $var wire 32 %! regfile(14) [31:0] $end
    $var wire 32 &! regfile(15) [31:0] $end
    $var wire 32 '! regfile(16) [31:0] $end
    $var wire 32 (! regfile(17) [31:0] $end
    $var wire 32 )! regfile(18) [31:0] $end
    $var wire 32 *! regfile(19) [31:0] $end
    $var wire 32 w regfile(2) [31:0] $end
    $var wire 32 +! regfile(20) [31:0] $end
    $var wire 32 ,! regfile(21) [31:0] $end
    $var wire 32 -! regfile(22) [31:0] $end
    $var wire 32 .! regfile(23) [31:0] $end
    $var wire 32 /! regfile(24) [31:0] $end
    $var wire 32 0! regfile(25) [31:0] $end
    $var wire 32 1! regfile(26) [31:0] $end
    $var wire 32 2! regfile(27) [31:0] $end
    $var wire 32 3! regfile(28) [31:0] $end
    $var wire 32 4! regfile(29) [31:0] $end
    $var wire 32 x regfile(3) [31:0] $end
    $var wire 32 5! regfile(30) [31:0] $end
    $var wire 32 6! regfile(31) [31:0] $end
    $var wire 32 y regfile(4) [31:0] $end
    $var wire 32 z regfile(5) [31:0] $end
    $var wire 32 { regfile(6) [31:0] $end
    $var wire 32 | regfile(7) [31:0] $end
    $var wire 32 } regfile(8) [31:0] $end
    $var wire 32 ~ regfile(9) [31:0] $end
    $var wire 32 F! regfiledata [31:0] $end
    $var wire  1 D! regwrite $end
    $var wire  1 X! reset $end
    $var wire  1 B! rl $end
    $var wire 32 =! rs1_value [31:0] $end
    $var wire 32 >! rs2_value [31:0] $end
    $var wire  1 $ trap $end
    $scope module unnamedblk1 $end
     $var wire 32 N! i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module mem_0 $end
    $var wire 32 l! MEM_ADDR_WIDTH [31:0] $end
    $var wire 32 m! RESV_BITS [31:0] $end
    $var wire  1 W! clock $end
    $var wire 32 ) dmem_addr0 [31:0] $end
    $var wire 32 1 dmem_addr1 [31:0] $end
    $var wire  2 6 dmem_cond [1:0] $end
    $var wire  1 U! dmem_cond0_reg $end
    $var wire  1 V! dmem_cond1_reg $end
    $var wire 32 , dmem_rdata0 [31:0] $end
    $var wire 32 , dmem_rdata0_reg [31:0] $end
    $var wire 32 4 dmem_rdata1 [31:0] $end
    $var wire 32 4 dmem_rdata1_reg [31:0] $end
    $var wire  2 5 dmem_resv [1:0] $end
    $var wire  1 ' dmem_valid0 $end
    $var wire  1 / dmem_valid1 $end
    $var wire 32 + dmem_wdata0 [31:0] $end
    $var wire 32 3 dmem_wdata1 [31:0] $end
    $var wire  1 ( dmem_wr_is_cond0 $end
    $var wire  1 0 dmem_wr_is_cond1 $end
    $var wire  4 * dmem_wstrb0 [3:0] $end
    $var wire  4 2 dmem_wstrb1 [3:0] $end
    $var wire 32 % imem_addr0 [31:0] $end
    $var wire 32 - imem_addr1 [31:0] $end
    $var wire 32 & imem_data0 [31:0] $end
    $var wire 32 . imem_data1 [31:0] $end
    $var wire  1 X! reset $end
    $var wire 12 O! resv_addr0 [11:0] $end
    $var wire 12 P! resv_addr1 [11:0] $end
    $var wire  1 S! resv_conflict0 $end
    $var wire  1 T! resv_conflict1 $end
    $var wire  1 Q! resv_valid0 $end
    $var wire  1 R! resv_valid1 $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000000000000000000000000000000 %
b00001100000000000000000100010011 &
0'
0(
b00000000000000000000000000000000 )
b0000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00001100000000000000000100010011 .
0/
00
b00000000000000000000000000000000 1
b0000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00 5
b00 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
09
0:
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b0000110 [
b00000 \
b00000 ]
b000 ^
b00010 _
b0010011 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b000011000000 c
b00000000000000000000000011000000 d
1e
0f
0g
1h
b00000000000000000000000000000100 i
b00000000000000000000000011000000 j
b00000000 k
0l
b00000 m
0n
0o
0p
b000 q
b00000000000000000000000000000000 r
0s
0t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b0000110 7!
b00000 8!
b00000 9!
b000 :!
b00010 ;!
b0010011 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b000011000000 ?!
b00000000000000000000000011000000 @!
1A!
0B!
0C!
1D!
b00000000000000000000000000000100 E!
b00000000000000000000000011000000 F!
b00000000 G!
0H!
b00000 I!
0J!
0K!
0L!
b000 M!
b00000000000000000000000000000000 N!
b000000000000 O!
b000000000000 P!
0Q!
0R!
0S!
0T!
0U!
0V!
1W!
1X!
b00000000000000000000000000010000 Y!
b00000000000000000000000000000010 Z!
b00000000000000000000000000000000 [!
b00000000000000000000000000000000 \!
b00000000000000000000000000100000 ]!
b0010011 ^!
b0110011 _!
b0110111 `!
b0010111 a!
b1101111 b!
b1100111 c!
b1100011 d!
b0000011 e!
b0100011 f!
b0101111 g!
b1110011 h!
b00010 i!
b00011 j!
b00000000000000010000000000000000 k!
b00000000000000000000000000010001 l!
b00000000000000000000000000001100 m!
#5
0W!
#10
b00000000000000010000000000000000 -
b00001100000100000000000100010011 .
b11 6
b00000000000000000000000000000001 7
1:
b00000000000000000000000000100000 r
1t
b00001 8!
b000011000001 ?!
b00000000000000000000000011000001 @!
b00000000000000010000000000000100 E!
b00000000000000000000000011000001 F!
b00000000000000000000000000100000 N!
1U!
1V!
1W!
#15
0W!
#20
b00000000000000000000000000000010 7
1W!
#25
0W!
#30
b00000000000000000000000000000011 7
1W!
#35
0W!
#40
b00000000000000000000000000000100 7
1W!
#45
0W!
#50
b00000000000000000000000000000101 7
1W!
#55
0W!
0X!
#60
b00000000000000000000000000000100 %
b01001011000000000000000110010011 &
b00000000000000010000000000000100 -
b01001011000000000000000110010011 .
b00000000000000000000000000000110 7
b00000000000000000000000011000000 =
b0100101 [
b10000 \
b00011 _
b010010110000 c
b00000000000000000000010010110000 d
0e
1f
b00000000000000000000000000001000 i
b00000000000000000000010010110000 j
b00000000000000000000000011000001 w
b0100101 7!
b10000 8!
b00011 ;!
b010010110000 ?!
b00000000000000000000010010110000 @!
0A!
1B!
b00000000000000010000000000001000 E!
b00000000000000000000010010110000 F!
1W!
#65
0W!
#70
b00000000000000000000000000001000 %
b11111111010000000000001010010011 &
b00000000000000010000000000001000 -
b11111111010000000000001010010011 .
b00000000000000000000000000000111 7
b00000000000000000000010010110000 >
b1111111 [
b10100 \
b00101 _
b111111110100 c
b11111111111111111111111111110100 d
1e
b00000000000000000000000000001100 i
b11111111111111111111111111110100 j
b00000000000000000000010010110000 x
b1111111 7!
b10100 8!
b00101 ;!
b111111110100 ?!
b11111111111111111111111111110100 @!
1A!
b00000000000000010000000000001100 E!
b11111111111111111111111111110100 F!
1W!
#75
0W!
#80
b00000000000000000000000000001100 %
b00000000000000000000000000010011 &
b00000000000000010000000000001100 -
b00000000000000000000000000010011 .
b00000000000000000000000000001000 7
b11111111111111111111111111110100 @
b0000000 [
b00000 \
b00000 _
b000000000000 c
b00000000000000000000000000000000 d
0e
0f
b00000000000000000000000000010000 i
b00000000000000000000000000000000 j
b11111111111111111111111111110100 z
b0000000 7!
b00000 8!
b00000 ;!
b000000000000 ?!
b00000000000000000000000000000000 @!
0A!
0B!
b00000000000000010000000000010000 E!
b00000000000000000000000000000000 F!
1W!
#85
0W!
#90
b00000000000000000000000000010000 %
b00000000000000010000000000010000 -
b00000000000000000000000000001001 7
b00000000000000000000000000010100 i
b00000000000000010000000000010100 E!
1W!
#95
0W!
#100
b00000000000000000000000000010100 %
b00000000000000010000000000010100 -
b00010000000000011010001000101111 .
1/
b00000000000000000000010010110000 1
b10 5
b00000000000000000000000000001010 7
b00000000000000000000000000011000 i
1s
b0001000 7!
b00011 9!
b010 :!
b00100 ;!
b0101111 <!
b00000000000000000000010010110000 =!
b000100000000 ?!
b00000000000000000000000100000000 @!
b00000000000000010000000000011000 E!
1W!
#105
0W!
#110
b00000000000000000000000000011000 %
0/
b00000000000000000000000000000000 1
b00 5
b01 6
b00000000000000000000000000001011 7
b00000000000000000000000000011100 i
0s
0t
0D!
b00000000000000010000000000010100 E!
b00000001 G!
1H!
b00100 I!
1J!
b000100101100 P!
1R!
0V!
1W!
#115
0W!
#120
b00000000000000000000000000011100 %
b00010000000000011010001000101111 &
1'
b00000000000000000000010010110000 )
b01 5
b00000000000000000000000000001100 7
19
b0001000 [
b00011 ]
b010 ^
b00100 _
b0101111 `
b00000000000000000000010010110000 a
b000100000000 c
b00000000000000000000000100000000 d
b00000000000000000000000000100000 i
b00000000 G!
1W!
#125
0W!
#130
0'
b00000000000000000000000000000000 )
b00000000000000010000000000011000 -
b00000000000000000000000000010011 .
b00 5
b00 6
b00000000000000000000000000001101 7
09
0:
0h
b00000000000000000000000000011100 i
b00000001 k
1l
b00100 m
1n
b0000000 7!
b00000 9!
b000 :!
b00000 ;!
b0010011 <!
b00000000000000000000000000000000 =!
b000000000000 ?!
b00000000000000000000000000000000 @!
1D!
b00000000000000010000000000011100 E!
0H!
0J!
b000100101100 O!
1Q!
0U!
1W!
#135
0W!
#140
b00000000000000010000000000011100 -
b00000000000000000000000000001110 7
b00000000 k
b00000000000000010000000000100000 E!
1W!
#145
0W!
#150
b00000000000000000000000000100000 %
b00000000000000000000000000010011 &
b00000000000000010000000000100000 -
b00000000000000000000000000001111 7
b0000000 [
b00000 ]
b000 ^
b00000 _
b0010011 `
b00000000000000000000000000000000 a
b000000000000 c
b00000000000000000000000000000000 d
1h
b00000000000000000000000000100100 i
0l
0n
b00000000000000010000000000100100 E!
1W!
#155
0W!
#160
b00000000000000000000000000100100 %
b00000000000000010000000000100100 -
b00000000000000000000000000010000 7
b00000000000000000000000000101000 i
b00000000000000010000000000101000 E!
1W!
#165
0W!
#170
b00000000000000000000000000101000 %
b00000000000000010000000000101000 -
b00011000001000011010001010101111 .
1/
10
b00000000000000000000010010110000 1
b1111 2
b00000000000000000000000011000001 3
b00000000000000000000000000010001 7
b00000000000000000000000000101100 i
b0001100 7!
b00010 8!
b00011 9!
b010 :!
b00101 ;!
b0101111 <!
b00000000000000000000010010110000 =!
b00000000000000000000000011000001 >!
b000110000010 ?!
b00000000000000000000000110000010 @!
b00000000000000010000000000101100 E!
1W!
#175
0W!
#180
b00000000000000000000000000101100 %
0/
00
b00000000000000000000000000000000 1
b0000 2
b00000000000000000000000000000000 3
b00000000000000000000000000010010 7
b00000000000000000000000000110000 i
0D!
b00000000000000010000000000101000 E!
b00000001 G!
1H!
b00101 I!
1K!
0R!
1W!
#185
0W!
#190
b00000000000000000000000000110000 %
b00011000001000011010001010101111 &
1'
1(
b00000000000000000000010010110000 )
b1111 *
b00000000000000000000000011000000 +
b00000000000000000000000000010011 7
b0001100 [
b00010 \
b00011 ]
b010 ^
b00101 _
b0101111 `
b00000000000000000000010010110000 a
b00000000000000000000000011000000 b
b000110000010 c
b00000000000000000000000110000010 d
b00000000000000000000000000110100 i
b00000000 G!
1W!
#195
0W!
#200
0'
0(
b00000000000000000000000000000000 )
b0000 *
b00000000000000000000000000000000 +
b00000000000000000000000011000001 ,
b00000000000000010000000000101100 -
b00000000000000011010001100000011 .
1/
b00000000000000000000010010110000 1
b00000000000000000000000000010100 7
0h
b00000000000000000000000000110000 i
b00000001 k
1l
b00101 m
1o
b00000000000000000000000000000000 z
b0000000 7!
b00000 8!
b00110 ;!
b0000011 <!
b00000000000000000000000000000000 >!
b000000000000 ?!
b00000000000000000000000000000000 @!
1D!
b00000000000000010000000000110000 E!
0H!
0K!
0Q!
1W!
#205
0W!
#210
0/
b00000000000000000000000000000000 1
b00000000000000000000000011000000 4
b00000000000000000000000000010101 7
b00000000 k
0D!
b00000000000000010000000000101100 E!
b00000001 G!
1H!
b00110 I!
1L!
b010 M!
1W!
#215
0W!
#220
b00000000000000000000000000110100 %
b00000000000000011010001100000011 &
1'
b00000000000000000000010010110000 )
b00000000000000000000000000010110 7
b00000000000000000000000000000000 @
b0000000 [
b00000 \
b00110 _
b0000011 `
b00000000000000000000000000000000 b
b000000000000 c
b00000000000000000000000000000000 d
1h
b00000000000000000000000000111000 i
b00000000000000000000000011000001 j
0l
0o
b00000000 G!
1W!
#225
0W!
#230
1$
0'
b00000000000000000000000000000000 )
b00000000000000000000000011000000 ,
b00000000000000010000000000110000 -
b00000000000100000000000001110011 .
b00000000000000000000000000010111 7
0h
b00000000000000000000000000110100 i
b00000000000000000000000000000000 j
b00000001 k
1l
b00110 m
1p
b010 q
b00000000000000000000000011000000 {
b00001 8!
b00000 9!
b000 :!
b00000 ;!
b1110011 <!
b00000000000000000000000000000000 =!
b000000000001 ?!
b00000000000000000000000000000001 @!
1C!
b00000000000000010000000000110100 E!
0H!
0L!
1W!
#235
0W!
#240
b00000000000000000000000000011000 7
b00000000 k
1W!
#245
0W!
#250
1#
b00000000000000000000000000111000 %
b00000000000100000000000001110011 &
b00000000000000000000000000011001 7
b00000000000000000000000011000000 A
b00001 \
b00000 ]
b000 ^
b00000 _
b1110011 `
b00000000000000000000000000000000 a
b000000000001 c
b00000000000000000000000000000001 d
1g
b00000000000000000000000000111100 i
0l
0p
1W!
#255
0W!
#260
b00000000000000000000000000011010 7
b00000000000000000000000000100000 8
1W!
